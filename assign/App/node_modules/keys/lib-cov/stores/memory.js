/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['stores/memory.js']) {
  _$jscoverage['stores/memory.js'] = [];
  _$jscoverage['stores/memory.js'][8] = 0;
  _$jscoverage['stores/memory.js'][9] = 0;
  _$jscoverage['stores/memory.js'][12] = 0;
  _$jscoverage['stores/memory.js'][13] = 0;
  _$jscoverage['stores/memory.js'][14] = 0;
  _$jscoverage['stores/memory.js'][17] = 0;
  _$jscoverage['stores/memory.js'][18] = 0;
  _$jscoverage['stores/memory.js'][21] = 0;
  _$jscoverage['stores/memory.js'][22] = 0;
  _$jscoverage['stores/memory.js'][23] = 0;
  _$jscoverage['stores/memory.js'][26] = 0;
  _$jscoverage['stores/memory.js'][27] = 0;
  _$jscoverage['stores/memory.js'][30] = 0;
  _$jscoverage['stores/memory.js'][31] = 0;
  _$jscoverage['stores/memory.js'][34] = 0;
  _$jscoverage['stores/memory.js'][35] = 0;
  _$jscoverage['stores/memory.js'][36] = 0;
}
_$jscoverage['stores/memory.js'][8]++;
var Memory = module.exports = (function Memory() {
  _$jscoverage['stores/memory.js'][9]++;
  this.data = {};
});
_$jscoverage['stores/memory.js'][12]++;
Memory.prototype.set = (function (key, val, fn) {
  _$jscoverage['stores/memory.js'][13]++;
  this.data[key] = val;
  _$jscoverage['stores/memory.js'][14]++;
  fn && fn();
});
_$jscoverage['stores/memory.js'][17]++;
Memory.prototype.get = (function (key, fn) {
  _$jscoverage['stores/memory.js'][18]++;
  fn(null, this.data[key]);
});
_$jscoverage['stores/memory.js'][21]++;
Memory.prototype.remove = (function (key, fn) {
  _$jscoverage['stores/memory.js'][22]++;
  delete this.data[key];
  _$jscoverage['stores/memory.js'][23]++;
  fn && fn();
});
_$jscoverage['stores/memory.js'][26]++;
Memory.prototype.has = (function (key, fn) {
  _$jscoverage['stores/memory.js'][27]++;
  fn(null, key in this.data);
});
_$jscoverage['stores/memory.js'][30]++;
Memory.prototype.length = (function (fn) {
  _$jscoverage['stores/memory.js'][31]++;
  fn(null, Object.keys(this.data).length);
});
_$jscoverage['stores/memory.js'][34]++;
Memory.prototype.clear = (function (fn) {
  _$jscoverage['stores/memory.js'][35]++;
  this.data = {};
  _$jscoverage['stores/memory.js'][36]++;
  fn && fn();
});
_$jscoverage['stores/memory.js'].source = ["","/*!"," * Keys - Memory"," * Copyright(c) 2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;"," * MIT Licensed"," */","","var Memory = module.exports = function Memory() {","    this.data = {};","};","","Memory.prototype.set = function(key, val, fn){","    this.data[key] = val;","    fn &amp;&amp; fn();","};","","Memory.prototype.get = function(key, fn){","    fn(null, this.data[key]);","};","","Memory.prototype.remove = function(key, fn){","    delete this.data[key];","    fn &amp;&amp; fn();","};","","Memory.prototype.has = function(key, fn){","    fn(null, key in this.data);","};","","Memory.prototype.length = function(fn){","    fn(null, Object.keys(this.data).length);","};","","Memory.prototype.clear = function(fn){","    this.data = {};","    fn &amp;&amp; fn();","};",""];
